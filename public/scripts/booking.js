import { responseToJson, dateToUnixStamp } from './search.js';
import { localS } from './localStorage.js';
import { renderToast } from './lib.js';
// import { TBook } from './types.js'
// const fetch = require('node-fetch')
// function searchForBooking(checkInDate: Date, checkOutDate: Date, maxPrice: number) {
//   let url = `http://localhost:3030/places?checkInDate=${dateToUnixStamp(checkInDate)}&checkOutDate=${dateToUnixStamp(checkOutDate)}&coordinates=59.9386,30.3141`
//   if (maxPrice != null) {
//     url += `&maxPrice=${maxPrice}`
//   }
//   return responseToJson(fetch(url))
// }
export function book(placeId, checkInDate, checkOutDate) {
    if (placeId && checkInDate && checkOutDate) {
        const data = responseToJson(fetch(`http://localhost:3030/places/${placeId}?` +
            `checkInDate=${dateToUnixStamp(checkInDate)}&` +
            `checkOutDate=${dateToUnixStamp(checkOutDate)}&`, { method: 'PATCH' }));
        if (data) {
            console.log(`booked: ${placeId}, chek in: ${checkInDate.getTime()}, check out: ${checkOutDate.getTime()}`);
            const bookRes = {
                'id': placeId,
                'checkIn': checkInDate.getTime(),
                'checkOut': checkOutDate.getTime()
            };
            localS.set('booked', bookRes);
            renderToast({ text: `Вы забронировали номер ${placeId} с ${new Date(checkInDate).toLocaleString('ru-RU')} по ${new Date(checkOutDate).toLocaleString('ru-RU')}`, type: 'success' }, { name: 'Ок', handler: () => { console.log('Уведомление закрыто'); } });
        }
    }
    else {
        return false;
    }
}
export function bookStart() {
    document.querySelectorAll('.result-info--footer button').forEach((elt) => {
        elt.addEventListener('click', (ev) => {
            const checkInDate = new Date(document.getElementById('check-in-date').getAttribute('value'));
            const checkOutDate = new Date(document.getElementById('check-out-date').getAttribute('value'));
            const target = ev.target;
            const placeId = target.closest('.result').getAttribute('id').substring(5);
            console.log(`${placeId}, ${checkInDate}, ${checkOutDate}`);
            book(placeId, checkInDate, checkOutDate);
        });
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm9va2luZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ib29raW5nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQUUsZUFBZSxFQUFFLE1BQU0sYUFBYSxDQUFBO0FBQzdELE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQTtBQUMxQyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sVUFBVSxDQUFBO0FBQ3RDLHFDQUFxQztBQUlyQyxzQ0FBc0M7QUFJdEMsdUZBQXVGO0FBQ3ZGLG1LQUFtSztBQUVuSyw0QkFBNEI7QUFDNUIscUNBQXFDO0FBQ3JDLE1BQU07QUFFTixzQ0FBc0M7QUFDdEMsSUFBSTtBQUdKLE1BQU0sVUFBVSxJQUFJLENBQUMsT0FBd0IsRUFBRSxXQUF3QixFQUFFLFlBQXlCO0lBSWhHLElBQUksT0FBTyxJQUFJLFdBQVcsSUFBSSxZQUFZLEVBQUU7UUFFMUMsTUFBTSxJQUFJLEdBQUcsY0FBYyxDQUFDLEtBQUssQ0FDL0IsZ0NBQWdDLE9BQU8sR0FBRztZQUMxQyxlQUFlLGVBQWUsQ0FBQyxXQUFXLENBQUMsR0FBRztZQUM5QyxnQkFBZ0IsZUFBZSxDQUFDLFlBQVksQ0FBQyxHQUFHLEVBQ2hELEVBQUMsTUFBTSxFQUFFLE9BQU8sRUFBQyxDQUNsQixDQUFDLENBQUM7UUFFSCxJQUFJLElBQUksRUFBRTtZQUVSLE9BQU8sQ0FBQyxHQUFHLENBQUMsV0FBVyxPQUFPLGNBQWMsV0FBVyxDQUFDLE9BQU8sRUFBRSxnQkFBZ0IsWUFBWSxDQUFDLE9BQU8sRUFBRSxFQUFFLENBQUMsQ0FBQTtZQUUxRyxNQUFNLE9BQU8sR0FBRztnQkFDZCxJQUFJLEVBQUUsT0FBTztnQkFDYixTQUFTLEVBQUUsV0FBVyxDQUFDLE9BQU8sRUFBRTtnQkFDaEMsVUFBVSxFQUFFLFlBQVksQ0FBQyxPQUFPLEVBQUU7YUFDbkMsQ0FBQTtZQUVELE1BQU0sQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLE9BQU8sQ0FBRSxDQUFBO1lBRTlCLFdBQVcsQ0FDVCxFQUFFLElBQUksRUFBRSwwQkFBMEIsT0FBTyxNQUFNLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLEVBQ3RLLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFFLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFBLENBQUMsQ0FBQyxFQUFFLENBQ3RFLENBQUE7U0FFRjtLQUVGO1NBQ0k7UUFDSCxPQUFPLEtBQUssQ0FBQTtLQUNiO0FBSUgsQ0FBQztBQUlELE1BQU0sVUFBVSxTQUFTO0lBRXZCLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyw2QkFBNkIsQ0FBQyxDQUFDLE9BQU8sQ0FBRSxDQUFDLEdBQUcsRUFBRSxFQUFFO1FBQ3hFLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxFQUFjLEVBQUUsRUFBRTtZQUkvQyxNQUFNLFdBQVcsR0FBUyxJQUFJLElBQUksQ0FBRSxRQUFRLENBQUMsY0FBYyxDQUFDLGVBQWUsQ0FBQyxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsQ0FBRSxDQUFBO1lBQ3BHLE1BQU0sWUFBWSxHQUFTLElBQUksSUFBSSxDQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLENBQUUsQ0FBQTtZQUd2RyxNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsTUFBaUIsQ0FBQztZQUNwQyxNQUFNLE9BQU8sR0FBb0IsTUFBTSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBRzNGLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxPQUFPLEtBQUssV0FBVyxLQUFLLFlBQVksRUFBRSxDQUFDLENBQUE7WUFDMUQsSUFBSSxDQUFDLE9BQU8sRUFBRSxXQUFXLEVBQUUsWUFBWSxDQUFDLENBQUM7UUFJM0MsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDLENBQUMsQ0FBQztBQUVMLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZXNwb25zZVRvSnNvbiwgZGF0ZVRvVW5peFN0YW1wIH0gZnJvbSAnLi9zZWFyY2guanMnXG5pbXBvcnQgeyBsb2NhbFMgfSBmcm9tICcuL2xvY2FsU3RvcmFnZS5qcydcbmltcG9ydCB7IHJlbmRlclRvYXN0IH0gZnJvbSAnLi9saWIuanMnXG4vLyBpbXBvcnQgeyBUQm9vayB9IGZyb20gJy4vdHlwZXMuanMnXG5cblxuXG4vLyBjb25zdCBmZXRjaCA9IHJlcXVpcmUoJ25vZGUtZmV0Y2gnKVxuXG5cblxuLy8gZnVuY3Rpb24gc2VhcmNoRm9yQm9va2luZyhjaGVja0luRGF0ZTogRGF0ZSwgY2hlY2tPdXREYXRlOiBEYXRlLCBtYXhQcmljZTogbnVtYmVyKSB7XG4vLyAgIGxldCB1cmwgPSBgaHR0cDovL2xvY2FsaG9zdDozMDMwL3BsYWNlcz9jaGVja0luRGF0ZT0ke2RhdGVUb1VuaXhTdGFtcChjaGVja0luRGF0ZSl9JmNoZWNrT3V0RGF0ZT0ke2RhdGVUb1VuaXhTdGFtcChjaGVja091dERhdGUpfSZjb29yZGluYXRlcz01OS45Mzg2LDMwLjMxNDFgXG5cbi8vICAgaWYgKG1heFByaWNlICE9IG51bGwpIHtcbi8vICAgICB1cmwgKz0gYCZtYXhQcmljZT0ke21heFByaWNlfWBcbi8vICAgfVxuXG4vLyAgIHJldHVybiByZXNwb25zZVRvSnNvbihmZXRjaCh1cmwpKVxuLy8gfVxuXG5cbmV4cG9ydCBmdW5jdGlvbiBib29rKHBsYWNlSWQ6IHN0cmluZyB8IG51bWJlciwgY2hlY2tJbkRhdGU6IERhdGUgfCBudWxsLCBjaGVja091dERhdGU6IERhdGUgfCBudWxsKSB7XG5cbiAgXG5cbiAgaWYgKHBsYWNlSWQgJiYgY2hlY2tJbkRhdGUgJiYgY2hlY2tPdXREYXRlKSB7XG5cbiAgICBjb25zdCBkYXRhID0gcmVzcG9uc2VUb0pzb24oZmV0Y2goXG4gICAgICBgaHR0cDovL2xvY2FsaG9zdDozMDMwL3BsYWNlcy8ke3BsYWNlSWR9P2AgK1xuICAgICAgYGNoZWNrSW5EYXRlPSR7ZGF0ZVRvVW5peFN0YW1wKGNoZWNrSW5EYXRlKX0mYCArXG4gICAgICBgY2hlY2tPdXREYXRlPSR7ZGF0ZVRvVW5peFN0YW1wKGNoZWNrT3V0RGF0ZSl9JmAsXG4gICAgICB7bWV0aG9kOiAnUEFUQ0gnfVxuICAgICkpO1xuXG4gICAgaWYgKGRhdGEpIHtcblxuICAgICAgY29uc29sZS5sb2coYGJvb2tlZDogJHtwbGFjZUlkfSwgY2hlayBpbjogJHtjaGVja0luRGF0ZS5nZXRUaW1lKCl9LCBjaGVjayBvdXQ6ICR7Y2hlY2tPdXREYXRlLmdldFRpbWUoKX1gKVxuXG4gICAgICBjb25zdCBib29rUmVzID0ge1xuICAgICAgICAnaWQnOiBwbGFjZUlkLCBcbiAgICAgICAgJ2NoZWNrSW4nOiBjaGVja0luRGF0ZS5nZXRUaW1lKCksIFxuICAgICAgICAnY2hlY2tPdXQnOiBjaGVja091dERhdGUuZ2V0VGltZSgpXG4gICAgICB9XG5cbiAgICAgIGxvY2FsUy5zZXQoJ2Jvb2tlZCcsIGJvb2tSZXMgKVxuXG4gICAgICByZW5kZXJUb2FzdChcbiAgICAgICAgeyB0ZXh0OiBg0JLRiyDQt9Cw0LHRgNC+0L3QuNGA0L7QstCw0LvQuCDQvdC+0LzQtdGAICR7cGxhY2VJZH0g0YEgJHtuZXcgRGF0ZShjaGVja0luRGF0ZSkudG9Mb2NhbGVTdHJpbmcoJ3J1LVJVJyl9INC/0L4gJHtuZXcgRGF0ZShjaGVja091dERhdGUpLnRvTG9jYWxlU3RyaW5nKCdydS1SVScpfWAsIHR5cGU6ICdzdWNjZXNzJyB9LFxuICAgICAgICB7IG5hbWU6ICfQntC6JywgaGFuZGxlcjogKCkgPT4geyBjb25zb2xlLmxvZygn0KPQstC10LTQvtC80LvQtdC90LjQtSDQt9Cw0LrRgNGL0YLQvicpIH0gfVxuICAgICAgKVxuXG4gICAgfVxuXG4gIH1cbiAgZWxzZSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cblxuXG5cbn1cblxuXG5cbmV4cG9ydCBmdW5jdGlvbiBib29rU3RhcnQoKSB7XG5cbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnJlc3VsdC1pbmZvLS1mb290ZXIgYnV0dG9uJykuZm9yRWFjaCggKGVsdCkgPT4ge1xuICAgIGVsdC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChldjogTW91c2VFdmVudCkgPT4ge1xuXG4gICAgICBcblxuICAgICAgY29uc3QgY2hlY2tJbkRhdGU6IERhdGUgPSBuZXcgRGF0ZSAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NoZWNrLWluLWRhdGUnKS5nZXRBdHRyaWJ1dGUoJ3ZhbHVlJykgKVxuICAgICAgY29uc3QgY2hlY2tPdXREYXRlOiBEYXRlID0gbmV3IERhdGUgKCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2hlY2stb3V0LWRhdGUnKS5nZXRBdHRyaWJ1dGUoJ3ZhbHVlJykgKVxuXG4gICAgICBcbiAgICAgIGNvbnN0IHRhcmdldCA9IGV2LnRhcmdldCBhcyBFbGVtZW50O1xuICAgICAgY29uc3QgcGxhY2VJZDogc3RyaW5nIHwgbnVtYmVyID0gdGFyZ2V0LmNsb3Nlc3QoJy5yZXN1bHQnKS5nZXRBdHRyaWJ1dGUoJ2lkJykuc3Vic3RyaW5nKDUpO1xuICAgICAgXG5cbiAgICAgIGNvbnNvbGUubG9nKGAke3BsYWNlSWR9LCAke2NoZWNrSW5EYXRlfSwgJHtjaGVja091dERhdGV9YClcbiAgICAgIGJvb2socGxhY2VJZCwgY2hlY2tJbkRhdGUsIGNoZWNrT3V0RGF0ZSk7XG5cblxuICAgICAgXG4gICAgfSk7XG4gIH0pO1xuXG59XG5cblxuXG5cblxuXG5cblxuXG5cblxuIl19